@import '../../styles/variables/colors';
@import '../../styles/mixins/size';

.button {
  background-color: #fff;
  color: #000;
  padding: .45rem 2rem;
  position: relative;
  font-size: .75rem;
  border-radius: .2rem;
  text-transform: uppercase;
  text-align: center;
  text-decoration: none;
  font-weight: 900;
  border: .06rem solid;
  cursor: pointer;

  &_color {
    &_primary {
      color: $color-primary;
      border-color: $color-primary;

      &:hover,
      &.button_state_pressed {
        background-color: $color-primary;
      }

      &.button_inverse {
        background-color: $color-primary;

        &:hover,
        &.button_state_pressed {
          color: $color-primary;
        }

        .button__ripple {
          background-color: $color-primary;
        }
      }

      &, &.button_inverse:hover {
        box-shadow: 0 .2rem $color-primary;

        &.button_size_small {
          box-shadow: 0 .15rem $color-primary;
        }
      }

      &:hover,
      &.button_inverse {
        box-shadow: 0 .2rem $color-primary-darkened;

        &.button_size_small {
          box-shadow: 0 .15rem $color-primary-darkened;
        }
      }
    }

    &_warning {
      color: $color-warning;
      border-color: $color-warning;

      &:hover,
      &.button_state_pressed {
        background-color: $color-warning;
      }

      &.button_inverse {
        background-color: $color-warning;

        &:hover,
        &.button_state_pressed {
          color: $color-warning;
        }

        .button__ripple {
          background-color: $color-warning;
        }
      }

      &, &.button_inverse:hover {
        box-shadow: 0 .2rem $color-warning;

        &.button_size_small {
          box-shadow: 0 .15rem $color-warning;
        }
      }

      &:hover,
      &.button_inverse {
        box-shadow: 0 .2rem $color-warning-darkened;

        &.button_size_small {
          box-shadow: 0 .15rem $color-warning-darkened;
        }
      }
    }
  }

  &:hover,
  &.button_state_pressed {
    color: #fff;
  }

  &.button_inverse {
    color: #fff;

    &:hover,
    &.button_state_pressed {
      background-color: #fff;
    }

    &.button_state_pressed,
    &.button_state_pressed:hover {
      box-shadow: none;
    }
  }

  &.button_state_pressed,
  &.button_state_pressed:hover {
    box-shadow: none;
  }

  &_size_small {
    padding: .2rem 1.1rem;
    font-size: .62rem;
  }

  &_type {
    &_low {
      padding: .4rem 2rem;
    }

    &_rounded {
      @include size(auto);
      padding: .1rem .8rem;
      display: inline-block;
      font-family: 'Lato', 'Arial', sans-serif;
      font-size: .6rem;
      line-height: 2;
      letter-spacing: .05rem;
      text-decoration: none;
      border-bottom-width: 0;
      border-radius: .3rem;
      box-shadow: 0 .2rem #379285;
    }

    &_wide {
      width: 100%;
      padding-top: .45rem;
      padding-bottom: .4rem;
    }
  }

  &:focus {
    outline: none;
  }

  &__ripple {
    @include size(.5rem);
    position: absolute;
    border-radius: 50%;
    background-color: #fff;
    animation: ripple-animation 1s;
    box-shadow: none;
  }
}

@keyframes ripple-animation {
  from {
    transform: scale(1);
    opacity: .7;
  }
  to {
    transform: scale(10);
    opacity: 0;
  }
}
